dependencies {
    implementation project(":auth-entities")
    implementation project(":auth-mappers")
    implementation project(":auth-services")
    implementation project(":auth-viewmodels")

    implementation("io.jsonwebtoken:jjwt-api:$jjwtVersion")
    implementation("io.jsonwebtoken:jjwt-impl:$jjwtVersion")
    implementation("io.jsonwebtoken:jjwt-jackson:$jjwtVersion")
    implementation("io.github.astrapi69:throwable:$throwableVersion")
    implementation("io.github.astrapi69:bean-mapper-api:$beanMapperApiVersion")
    implementation("io.github.astrapi69:generic-mapper:$genericMapperVersion")
    implementation("io.github.astrapi69:auth-api:$authApiVersion")
    implementation("io.github.astrapi69:servlet-kt-extensions:$servletKtExtensionsVersion")
    implementation("io.github.astrapi69:auth:$authVersion")
    implementation("io.github.astrapi69:mystic-crypt:$mysticCryptVersion")
    implementation("io.github.astrapi69:data-api:$dataApiVersion")
    implementation("io.github.astrapi69:ent-core:$entCoreVersion")
    implementation("io.github.astrapi69:spring-tool-extensions:$springToolExtensionsVersion")
    implementation("io.github.astrapi69:spring-boot-extensions:$springBootExtensionsVersion")
    implementation("io.github.astrapi69:json-extensions:$jsonExtensionsVersion")
    implementation("io.github.astrapi69:silly-collection:$sillyCollectionVersion")
    implementation("io.github.astrapi69:silly-bean:$sillyBeanVersion")
    implementation("io.github.astrapi69:pg-enum-usertype:$pgEnumUsertypeVersion")
    implementation 'io.swagger.core.v3:swagger-models:2.2.10'
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.10'

    implementation("com.thoughtworks.xstream:xstream:$xstreamVersion")
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

    implementation("org.apache.commons:commons-lang3:$commonsLang3Version")
    implementation("io.github.astrapi69:file-worker:$fileWorkerVersion")
    implementation("org.postgresql:postgresql")
    implementation("org.flywaydb:flyway-core")
    implementation("org.springframework:spring-oxm")
    implementation("org.springframework.boot:spring-boot-starter-web")
            {
                exclude module: "spring-boot-starter-logging"
                exclude module: "logback-classic"
                exclude module: "slf4j-simple"
            }
    implementation("org.springframework.security:spring-security-web")
            {
                exclude module: "spring-boot-starter-logging"
                exclude module: "logback-classic"
                exclude module: "slf4j-simple"
            }
    implementation("org.springframework.security:spring-security-config")
    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation("org.springframework.boot:spring-boot-starter-aop")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-configuration-processor")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    developmentOnly("org.springframework.boot:spring-boot-devtools")
//    testImplementation("com.h2database:h2")
    testCompileOnly("org.projectlombok:lombok:$lombokVersion")
    testAnnotationProcessor("org.projectlombok:lombok:$lombokVersion")
    testImplementation("io.github.astrapi69:json-extensions:$jsonExtensionsVersion")
}

/**
 * For exclude the module: 'slf4j-reload4j' which produces a warning at the start from the application
 */
configurations {
    all {
        exclude group: 'org.slf4j', module: 'slf4j-reload4j'
    }
}

apply from: "../gradle/licensing.gradle"
apply from: "../gradle/publishing-auth-application.gradle"
